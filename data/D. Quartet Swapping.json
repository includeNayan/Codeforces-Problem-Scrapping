{
    "contest_id": "2102",
    "problem_index": "D",
    "title": "D. Quartet Swapping",
    "description": "You are given a permutation a a of length n n ∗ ∗ . You are allowed to do the following operation any number of times (possibly zero): Choose an index 1 ≤ i ≤ n − 3 1 ≤ i ≤ n − 3 . Then, swap a i a i with a i + 2 a i + 2 , and a i + 1 a i + 1 with a i + 3 a i + 3 simultaneously. In other words, permutation a a will be transformed from [ … , a i , a i + 1 , a i + 2 , a i + 3 , … ] [ … , a i , a i + 1 , a i + 2 , a i + 3 , … ] to [ … , a i + 2 , a i + 3 , a i , a i + 1 , … ] [ … , a i + 2 , a i + 3 , a i , a i + 1 , … ] . Determine the lexicographically smallest permutation † † that can be obtained by applying the above operation any number of times. ∗ ∗ A permutation of length n n is an array consisting of n n distinct integers from 1 1 to n n in arbitrary order. For example, [ 2 , 3 , 1 , 5 , 4 ] [ 2 , 3 , 1 , 5 , 4 ] is a permutation, but [ 1 , 2 , 2 ] [ 1 , 2 , 2 ] is not a permutation ( 2 2 appears twice in the array), and [ 1 , 3 , 4 ] [ 1 , 3 , 4 ] is also not a permutation ( n = 3 n = 3 but there is 4 4 in the array). † † An array x x is lexicographically smaller than an array y y of the same size if and only if the following holds: in the first position where x x and y y differ, the array x x has a smaller element than the corresponding element in y y .",
    "input": "Input Each test contains multiple test cases. The first line contains the number of test cases t t ( 1 ≤ t ≤ 1000 1 ≤ t ≤ 1000 ). The description of the test cases follows. The first line of each test case contains a single integer n n ( 4 ≤ n ≤ 2 ⋅ 10 5 4 ≤ n ≤ 2 ⋅ 10 5 ) — the length of permutation a a . The second line contains n n integers a 1 , a 2 , … , a n a 1 , a 2 , … , a n ( 1 ≤ a i ≤ n 1 ≤ a i ≤ n ) — the elements of permutation a a . It is guaranteed that the sum of n n over all test cases does not exceed 2 ⋅ 10 5 2 ⋅ 10 5 .",
    "output": "Output For each test case, output the lexicographically smallest permutation that can be obtained by applying the above operation any number of times.",
    "example": "Example\nInput\nCopy\n3\n4\n3 4 1 2\n5\n5 4 3 1 2\n10\n10 9 8 7 6 5 4 3 2 1\nOutput\nCopy\n1 2 3 4 \n2 1 3 4 5 \n2 1 4 3 6 5 8 7 10 9",
    "note": "Note In the first test case, an operation can be done on index i = 1 i = 1 , and the permutation will become [ 1 , 2 , 3 , 4 ] [ 1 , 2 , 3 , 4 ] , which is the lexicographically smallest permutation achievable. In the second test case, we can do the following sequence of operations: Do an operation on index i = 2 i = 2 . The permutation becomes [ 5 , 1 , 2 , 4 , 3 ] [ 5 , 1 , 2 , 4 , 3 ] . Do an operation on index i = 1 i = 1 . The permutation becomes [ 2 , 4 , 5 , 1 , 3 ] [ 2 , 4 , 5 , 1 , 3 ] . Do an operation on index i = 2 i = 2 . The permutation becomes [ 2 , 1 , 3 , 4 , 5 ] [ 2 , 1 , 3 , 4 , 5 ] .",
    "tags": [
        "data structures",
        "greedy",
        "sortings",
        "*1800"
    ],
    "editorial_content": null
}