{
    "contest_id": "1845",
    "problem_index": "A",
    "title": "A. Forbidden Integer",
    "description": "You are given an integer n n , which you want to obtain. You have an unlimited supply of every integer from 1 1 to k k , except integer x x (there are no integer x x at all). You are allowed to take an arbitrary amount of each of these integers (possibly, zero). Can you make the sum of taken integers equal to n n ? If there are multiple answers, print any of them.",
    "input": "Input The first line contains a single integer t t ( 1 ≤ t ≤ 100 1 ≤ t ≤ 100 ) — the number of testcases. The only line of each testcase contains three integers n , k n , k and x x ( 1 ≤ x ≤ k ≤ n ≤ 100 1 ≤ x ≤ k ≤ n ≤ 100 ).",
    "output": "Output For each test case, in the first line, print \" YES \" or \" NO \" — whether you can take an arbitrary amount of each integer from 1 1 to k k , except integer x x , so that their sum is equal to n n . If you can, the second line should contain a single integer m m — the total amount of taken integers. The third line should contain m m integers — each of them from 1 1 to k k , not equal to x x , and their sum is n n . If there are multiple answers, print any of them.",
    "example": "Example\nInput\nCopy\n5\n10 3 2\n5 2 1\n4 2 1\n7 7 3\n6 1 1\nOutput\nCopy\nYES\n6\n3 1 1 1 1 3\nNO\nYES\n2\n2 2\nYES\n1\n7\nNO",
    "note": "Note Another possible answer for the first testcase is [ 3 , 3 , 3 , 1 ] [ 3 , 3 , 3 , 1 ] . Note that you don't have to minimize the amount of taken integers. There also exist other answers. In the second testcase, you only have an unlimited supply of integer 2 2 . There is no way to get sum 5 5 using only them. In the fifth testcase, there are no integers available at all, so you can't get any positive sum.",
    "tags": [
        "constructive algorithms",
        "implementation",
        "math",
        "number theory",
        "*800"
    ],
    "editorial_content": null
}