{
    "contest_id": "2116",
    "problem_index": "D",
    "title": "D. Gellyfish and Camellia Japonica",
    "description": "Gellyfish has an array of n n integers c 1 , c 2 , … , c n c 1 , c 2 , … , c n . In the beginning, c = [ a 1 , a 2 , … , a n ] c = [ a 1 , a 2 , … , a n ] . Gellyfish will make q q modifications to c c . For i = 1 , 2 , … , q i = 1 , 2 , … , q , Gellyfish is given three integers x i x i , y i y i , and z i z i between 1 1 and n n . Then Gellyfish will set c z i : = min ( c x i , c y i ) c z i := min ( c x i , c y i ) . After the q q modifications, c = [ b 1 , b 2 , … , b n ] c = [ b 1 , b 2 , … , b n ] . Now Flower knows the value of b b and the value of the integers x i x i , y i y i , and z i z i for all 1 ≤ i ≤ q 1 ≤ i ≤ q , but she doesn't know the value of a a . Flower wants to find any possible value of the array a a or report that no such a a exists. If there are multiple possible values of the array a a , you may output any of them.",
    "input": "Input Each test contains multiple test cases. The first line contains the number of test cases t t ( 1 ≤ t ≤ 10 4 1 ≤ t ≤ 10 4 ). The description of the test cases follows. The first line of each test case contains two integers n n and q q ( 1 ≤ n , q ≤ 3 ⋅ 10 5 1 ≤ n , q ≤ 3 ⋅ 10 5 ) — the size of the array and the number of modifications. The second line of each test case contains n n integers b 1 , b 2 , … , b n b 1 , b 2 , … , b n ( 1 ≤ b i ≤ 10 9 1 ≤ b i ≤ 10 9 ) — the value of the array c c after the q q modifications. The following q q lines each contain three integers x i x i , y i y i , and z i z i ( 1 ≤ x i , y i , z i ≤ n 1 ≤ x i , y i , z i ≤ n ) — describing the i i -th modification. It is guaranteed that the sum of n n and the sum of q q over all test cases does not exceed 3 ⋅ 10 5 3 ⋅ 10 5 .",
    "output": "Output For each test case, if a a exists, output n n integers a 1 , a 2 , … , a n a 1 , a 2 , … , a n ( 0 ≤ a i ≤ 10 9 0 ≤ a i ≤ 10 9 ) in a single line. Otherwise, output \"-1\" in a single line. If there are multiple solutions, print any of them.",
    "example": "Example\nInput\nCopy\n3\n2 1\n1 2\n2 1 2\n3 2\n1 2 3\n2 3 2\n1 2 1\n6 4\n1 2 2 3 4 5\n5 6 6\n4 5 5\n3 4 4\n2 3 3\nOutput\nCopy\n-1\n1 2 3 \n1 2 3 4 5 5",
    "note": "Note In the first test case, based on the given sequence of modifications, we know that b 1 = a 1 b 1 = a 1 and b 2 = min ( a 1 , a 2 ) b 2 = min ( a 1 , a 2 ) . Therefore, it is necessary that b 2 ≤ b 1 b 2 ≤ b 1 . However, for the given b b , we have b 1 < b 2 b 1 < b 2 . Therefore, there is no solution. In the second test case, we can see that the given c c becomes b b from a a after the given modifications, and c c is not changed at each modification.",
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "graphs",
        "greedy",
        "trees",
        "*2100"
    ],
    "editorial_content": null
}