{
    "contest_id": "1831",
    "problem_index": "E",
    "title": "E. Hyperregular Bracket Strings",
    "description": "You are given an integer n n and k k intervals. The i i -th interval is [ l i , r i ] [ l i , r i ] where 1 ≤ l i ≤ r i ≤ n 1 ≤ l i ≤ r i ≤ n . Let us call a regular bracket sequence † , ‡ † , ‡ of length n n hyperregular if for each i i such that 1 ≤ i ≤ k 1 ≤ i ≤ k , the substring s l i s l i + 1 … s r i ¯ ¯ ¯ ¯ ¯ ¯ ¯ ¯ ¯ ¯ ¯ ¯ ¯ ¯ ¯ ¯ ¯ ¯ ¯ ¯ ¯ ¯ ¯ ¯ ¯ ¯ ¯ s l i s l i + 1 … s r i ¯ is also a regular bracket sequence. Your task is to count the number of hyperregular bracket sequences. Since this number can be really large, you are only required to find it modulo 998 244 353 998 244 353 . † † A bracket sequence is a string containing only the characters \" ( \" and \" ) \". ‡ ‡ A bracket sequence is called regular if one can turn it into a valid math expression by adding characters + and 1 . For example, sequences (())() , () , (()(())) and the empty string are regular, while )( , (() , and (()))( are not.",
    "input": "Input Each test contains multiple test cases. The first line of input contains a single integer t t ( 1 ≤ t ≤ 10 5 1 ≤ t ≤ 10 5 ) — the number of test cases. The description of test cases follows. The first line of each test case contains two integers n n and k k ( 1 ≤ n ≤ 3 ⋅ 10 5 1 ≤ n ≤ 3 ⋅ 10 5 , 0 ≤ k ≤ 3 ⋅ 10 5 0 ≤ k ≤ 3 ⋅ 10 5 ) — the length of the hyperregular bracket sequences and the number of intervals respectively. The following k k lines of each test case contains two integers l i l i and r i r i ( 1 ≤ l ≤ r ≤ n 1 ≤ l ≤ r ≤ n ). It is guaranteed that the sum of n n across all test cases does not exceed 3 ⋅ 10 5 3 ⋅ 10 5 and the sum of k k across all test cases does not exceed 3 ⋅ 10 5 3 ⋅ 10 5 .",
    "output": "Output For each test case, output the number of hyperregular bracket sequences modulo 998 244 353 998 244 353 .",
    "example": "Example\nInput\nCopy\n7\n6 0\n5 0\n8 1\n1 3\n10 2\n3 4\n6 9\n1000 3\n100 701\n200 801\n300 901\n28 5\n1 12\n3 20\n11 14\n4 9\n18 19\n4 3\n1 4\n1 4\n1 4\nOutput\nCopy\n5\n0\n0\n4\n839415253\n140\n2",
    "note": "Note For the first testcase, the 5 5 hyperregular bracket strings of length 6 6 are: ((())) , (()()) , (())() , ()(()) and ()()() . For the second testcase, there are no regular bracket strings of length 5 5 , and consequently, there are no hyperregular bracket strings of length 5 5 . For the third testcase, there are no hyperregular bracket strings of length 8 8 for which the substring [ 1 … 3 ] [ 1 … 3 ] is a regular bracket string. For the fourth testcase, there 4 4 hyperregular bracket strings are: ((())(())) , ((())()()) , ()()((())) and ()()(()())",
    "tags": [
        "combinatorics",
        "data structures",
        "hashing",
        "math",
        "number theory",
        "sortings",
        "two pointers",
        "*2400"
    ],
    "editorial_content": null
}