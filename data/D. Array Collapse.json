{
    "contest_id": "1913",
    "problem_index": "D",
    "title": "D. Array Collapse",
    "description": "You are given an array [ p 1 , p 2 , … , p n ] [ p 1 , p 2 , … , p n ] , where all elements are distinct. You can perform several (possibly zero) operations with it. In one operation, you can choose a contiguous subsegment of p p and remove all elements from that subsegment, except for the minimum element on that subsegment. For example, if p = [ 3 , 1 , 4 , 7 , 5 , 2 , 6 ] p = [ 3 , 1 , 4 , 7 , 5 , 2 , 6 ] and you choose the subsegment from the 3 3 -rd element to the 6 6 -th element, the resulting array is [ 3 , 1 , 2 , 6 ] [ 3 , 1 , 2 , 6 ] . An array a a is called reachable if it can be obtained from p p using several (maybe zero) aforementioned operations. Calculate the number of reachable arrays, and print it modulo 998244353 998244353 .",
    "input": "Input The first line of the input contains one integer t t ( 1 ≤ t ≤ 10 4 1 ≤ t ≤ 10 4 ) — the number of test cases. Each test case consists of two lines. The first line contains one integer n n ( 1 ≤ n ≤ 3 ⋅ 10 5 1 ≤ n ≤ 3 ⋅ 10 5 ). The second line contains n n distinct integers p 1 , p 2 , … , p n p 1 , p 2 , … , p n ( 1 ≤ p i ≤ 10 9 1 ≤ p i ≤ 10 9 ). Additional constraint on the input: the sum of n n over all test cases does not exceed 3 ⋅ 10 5 3 ⋅ 10 5 .",
    "output": "Output For each test case, print one integer — the number of reachable arrays, taken modulo 998244353 998244353 .",
    "example": "Example\nInput\nCopy\n3\n2\n2 1\n4\n2 4 1 3\n5\n10 2 6 3 4\nOutput\nCopy\n2\n6\n12",
    "note": "",
    "tags": [
        "data structures",
        "divide and conquer",
        "dp",
        "trees",
        "*2100"
    ],
    "editorial_content": null
}